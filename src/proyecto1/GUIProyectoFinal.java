package proyecto1;

import java.awt.Component;
import java.awt.Container;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Queue;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import proyecto1.ListaPelicula;
import proyecto1.Nodo;
import proyecto1.Pelicula;

/**
 *
 * @authors The Noobgrammers
 */
public class GUIProyectoFinal extends javax.swing.JFrame {
//Hay un mogollón de variables :,u .

    boolean T1hasRows;
    boolean T2hasRows;
    ListaPelicula listaPelicula = new ListaPelicula();
    int numPeliculasAlquiladas = 0;

    //Declaramos los arreglos para gestión de inventario.*/
    //Declarar el modelo de cada tabla
    DefaultTableModel dtmModeloTablaUno;
    DefaultTableModel dtmModeloTablaDos;

    //Esta funcion deshabilita los componentes de un panel
    public static void disableComponents(Container panelName) {
        for (Component component : panelName.getComponents()) {
            component.setEnabled(false);
        }
    }
    // Esta hace lo contrario

    public static void enableComponents(Container panelName) {
        for (Component component : panelName.getComponents()) {
            component.setEnabled(true);
        }
    }

    /**
     * Creates new form GUIProyectoFinal
     */
    public GUIProyectoFinal() {
        initComponents();
        this.setLocationRelativeTo(null);
        //txaPrecios.setEditable(false);

        listaPelicula.InicializarDatos();
        disableComponents(pnlAdmin);
        disableComponents(pnlCliente);
        disableComponents(pnlInsert);

        dtmModeloTablaUno = new DefaultTableModel();
        dtmModeloTablaUno.addColumn("ID");
        dtmModeloTablaUno.addColumn("Nombre");
        dtmModeloTablaUno.addColumn("Año");
        dtmModeloTablaUno.addColumn("Calificación");
        dtmModeloTablaUno.addColumn("Género");
        dtmModeloTablaUno.addColumn("Estado");
        tblInventario.setModel(dtmModeloTablaUno);

        dtmModeloTablaDos = new DefaultTableModel();
        dtmModeloTablaDos.addColumn("ID");
        dtmModeloTablaDos.addColumn("Nombre");
        dtmModeloTablaDos.addColumn("Año");
        dtmModeloTablaDos.addColumn("Calificación");
        dtmModeloTablaDos.addColumn("Género");
        dtmModeloTablaDos.addColumn("Estado");
        tblInventarioCliente.setModel(dtmModeloTablaDos);

    }

    //Para limipiar paneles
    public void adminCleaner() {

        txtCalificacion.setText("");
        txtNombre.setText("");
        txtID.setText("");
        txtAnio.setText("");
        cmbGenero.setSelectedItem(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgTipo = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rbtCliente = new javax.swing.JRadioButton();
        rbtPersonal = new javax.swing.JRadioButton();
        pnlAdmin = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pnlInsert = new javax.swing.JPanel();
        cmbGenero = new javax.swing.JComboBox<>();
        lblGenero = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        txtCalificacion = new javax.swing.JTextField();
        lblCosto = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        lblUnidad = new javax.swing.JLabel();
        txtAnio = new javax.swing.JTextField();
        btnIngresarPeli = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInventario = new javax.swing.JTable();
        btnConsultar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cmbAdminAccion = new javax.swing.JComboBox<>();
        pnlCliente = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        btnAlquilar = new javax.swing.JButton();
        btnAgregarP = new javax.swing.JButton();
        cmbAccionCliente = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblInventarioCliente = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        cmbGeneroC = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cmbAnio = new javax.swing.JComboBox<>();
        btnBorrarP = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel2.setText("Bienvenido");

        jLabel3.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel3.setText("Seleccione el tipo de usuario: ");

        btgTipo.add(rbtCliente);
        rbtCliente.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        rbtCliente.setText("Cliente");
        rbtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtClienteActionPerformed(evt);
            }
        });

        btgTipo.add(rbtPersonal);
        rbtPersonal.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        rbtPersonal.setText("Personal Administrativo");
        rbtPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtPersonalActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel1.setText("Inventario");

        cmbGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Acción", "Terror", "Anime", "Drama", "Comedia" }));
        cmbGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGeneroActionPerformed(evt);
            }
        });

        lblGenero.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        lblGenero.setText("Género:");

        lblCodigo.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        lblCodigo.setText("Calificación");

        lblCosto.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        lblCosto.setText("ID ");

        lblUnidad.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        lblUnidad.setText("Año");

        txtAnio.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                txtAnioComponentHidden(evt);
            }
        });
        txtAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnioActionPerformed(evt);
            }
        });

        btnIngresarPeli.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        btnIngresarPeli.setText("Ingresar película");
        btnIngresarPeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarPeliActionPerformed(evt);
            }
        });

        jLabel6.setText("Nombre");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInsertLayout = new javax.swing.GroupLayout(pnlInsert);
        pnlInsert.setLayout(pnlInsertLayout);
        pnlInsertLayout.setHorizontalGroup(
            pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInsertLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnIngresarPeli)
                    .addGroup(pnlInsertLayout.createSequentialGroup()
                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblGenero)
                            .addGroup(pnlInsertLayout.createSequentialGroup()
                                .addComponent(lblCodigo)
                                .addGap(8, 8, 8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbGenero, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCalificacion))))
                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlInsertLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCosto)
                            .addComponent(lblUnidad))
                        .addGap(26, 26, 26)
                        .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlInsertLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtNombre)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlInsertLayout.setVerticalGroup(
            pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInsertLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGenero)
                    .addComponent(lblCosto)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigo)
                    .addComponent(txtCalificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUnidad)
                    .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(pnlInsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIngresarPeli)
                    .addComponent(jLabel6)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tblInventario.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        tblInventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblInventario.setEnabled(false);
        jScrollPane1.setViewportView(tblInventario);

        btnConsultar.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        btnConsultar.setText("Consultar Inventario");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel5.setText("Seleccione una acción");

        cmbAdminAccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ingresar nueva película", "Eliminar una película" }));
        cmbAdminAccion.setSelectedIndex(-1);
        cmbAdminAccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAdminAccionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAdminLayout = new javax.swing.GroupLayout(pnlAdmin);
        pnlAdmin.setLayout(pnlAdminLayout);
        pnlAdminLayout.setHorizontalGroup(
            pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAdminLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(cmbAdminAccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(103, 103, 103))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAdminLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(240, 240, 240))
            .addGroup(pnlAdminLayout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(btnConsultar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlAdminLayout.setVerticalGroup(
            pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(cmbAdminAccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConsultar)
                .addGap(17, 17, 17))
        );

        jLabel4.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel4.setText("Seleccione una acción:");

        btnAlquilar.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        btnAlquilar.setText("Alquilar");
        btnAlquilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlquilarActionPerformed(evt);
            }
        });

        btnAgregarP.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        btnAgregarP.setText("Agregar película");
        btnAgregarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPActionPerformed(evt);
            }
        });

        cmbAccionCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Buscar película", "Mejores películas", "Filtrar por género", "Filtrar por año", "Ordenar alfabéticamente" }));
        cmbAccionCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAccionClienteActionPerformed(evt);
            }
        });

        tblInventarioCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblInventarioCliente);

        jLabel7.setText("Género");

        cmbGeneroC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Acción", "Terror", "Anime", "Drama", "Comedia" }));
        cmbGeneroC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGeneroCActionPerformed(evt);
            }
        });

        jLabel8.setText("Año");

        cmbAnio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021" }));
        cmbAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAnioActionPerformed(evt);
            }
        });

        btnBorrarP.setText("Vaciar Selecciones");
        btnBorrarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlClienteLayout = new javax.swing.GroupLayout(pnlCliente);
        pnlCliente.setLayout(pnlClienteLayout);
        pnlClienteLayout.setHorizontalGroup(
            pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlClienteLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(cmbAccionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(cmbGeneroC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAgregarP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBorrarP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAlquilar)
                .addGap(33, 33, 33))
        );
        pnlClienteLayout.setVerticalGroup(
            pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbAccionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cmbGeneroC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(cmbAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlClienteLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAgregarP)
                        .addGap(6, 6, 6)
                        .addComponent(btnBorrarP)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlClienteLayout.createSequentialGroup()
                        .addComponent(btnAlquilar)
                        .addGap(25, 25, 25))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(42, 42, 42)
                .addComponent(rbtPersonal)
                .addGap(107, 107, 107)
                .addComponent(rbtCliente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtPersonal)
                    .addComponent(jLabel3)
                    .addComponent(rbtCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(pnlAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pnlCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(338, 338, 338))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnioActionPerformed

    private void txtAnioComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_txtAnioComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnioComponentHidden

    private void rbtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtClienteActionPerformed

        //Cuando se presiona en cliente, se deshabilita los otros paneles.
        disableComponents(pnlAdmin);
        disableComponents(pnlInsert);
        enableComponents(pnlCliente);
        cmbGenero.setSelectedIndex(-1);
        cmbAdminAccion.setSelectedIndex(-1);
        cmbAccionCliente.setSelectedIndex(-1);
        //cmbAnio.setSelectedIndex(-1);
        //cmbGeneroC.setSelectedIndex(-1);
        cmbGeneroC.setEnabled(false);
        cmbAnio.setEnabled(false);
        //Para borrar los datos de tabla, los cuales pueden quedar visibles.
        if (T1hasRows) {
            for (int l = 0; l < dtmModeloTablaUno.getRowCount(); l++) {
                dtmModeloTablaUno.removeRow(l);
                l -= 1;
            }
            T1hasRows = false;
        }

        cmbAccionCliente.setSelectedIndex(-1);

        // btgTipo.clearSelection();

    }//GEN-LAST:event_rbtClienteActionPerformed

    private void rbtPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtPersonalActionPerformed
        //Desplegar la ventana de autenticación.
        limpiarTabla2();
        JPanel panel = new JPanel();
        JLabel label = new JLabel("Ingrese la contraseña:");
        JPasswordField pass = new JPasswordField(4);
        panel.add(label);
        panel.add(pass);
        String[] options = new String[]{"OK", "Cancelar"};

        JOptionPane.showOptionDialog(null, panel, "Personal Administrativo",
                JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                null, options, options[1]);
        //Verificando la entrada.
        if (!String.valueOf(pass.getPassword()).equals("1234")) {
            JOptionPane.showMessageDialog(rootPane, "Mala contraseña");

        } else {
            System.out.println("QUE PASAA!");
            enableComponents(pnlAdmin);
            //enableComponents(pnlInsert);
            disableComponents(pnlCliente);
            //clientCleaner();
        }
        btgTipo.clearSelection();
    }//GEN-LAST:event_rbtPersonalActionPerformed


    private void btnIngresarPeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarPeliActionPerformed
        //Iniciar el bloque try para atrapar excepciones con las entradas de usuarios.
        try {
            //Para evitar espacios en blanco, o codigos con mas de 7 caracteres.
            if (cmbGenero.getSelectedItem().equals("") || txtCalificacion.getText().equals("") || Integer.parseInt(txtID.getText()) < 0
                    || txtID.getText().equals("") || txtAnio.getText().equals("") || txtNombre.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Error 100 (Consulte el manual)");
            } else {
                String nombrePelicula = txtNombre.getText();
                Pelicula pelisEncontradas[] = listaPelicula.BuscarPelicula(nombrePelicula);

                if (pelisEncontradas.length == 0) {
                    Pelicula pl = new Pelicula(Integer.parseInt(txtID.getText()), txtNombre.getText(), Integer.parseInt(txtAnio.getText()), Integer.parseInt(txtCalificacion.getText()), cmbGenero.getSelectedItem().toString(), true);
                    listaPelicula.addOrdenamiento(pl);

                } else if (pelisEncontradas[0].isEstadoPelicula()) {
                    JOptionPane.showMessageDialog(rootPane, "Esta pelicula ya existe y esta disponible... ");
                } else {
                    pelisEncontradas[0].setEstadoPelicula(true);
                }

                adminCleaner();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error 701 (Consulte el manual)");
        }


    }//GEN-LAST:event_btnIngresarPeliActionPerformed

    private void cmbGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGeneroActionPerformed
        //Dunno
    }//GEN-LAST:event_cmbGeneroActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        //Para limpiar la tabla cada ves que, estando en AdminPanel y se consulta la tabla.
        if (T1hasRows) {
            for (int l = 0; l < dtmModeloTablaUno.getRowCount(); l++) {
                dtmModeloTablaUno.removeRow(l);
                l -= 1;
            }
            T1hasRows = false;
        }
        //d de la película, nombre,año, calificación, género, estado
        //Para añadir al comboBox los productos añadidos
        Nodo q, p;
        q = p = listaPelicula.getInicio();
        while (p != null) {
            dtmModeloTablaUno.addRow(new Object[]{p.getDato().getIdPelicula(), p.getDato().getNombrePelicula(),
                p.getDato().getAñoPelicula(), p.getDato().getCalificacionPelicula(), p.getDato().getGeneroPelicula(), p.getDato().getEstadoPeliculaNoBoleano()});
            T1hasRows = true;
            p = p.getEnlace();
        }


    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnAgregarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPActionPerformed
        if (numPeliculasAlquiladas < 5) {

            String pel = JOptionPane.showInputDialog(rootPane, "Nombre de la película que desea alquilar:", "Alquilacion (" + (5 - numPeliculasAlquiladas) + ")", JOptionPane.YES_NO_OPTION);
            Pelicula[] p = listaPelicula.BuscarPelicula(pel);
            if (p.length == 0) {
                JOptionPane.showMessageDialog(rootPane, "No existe tal película :c");
            } else if (p[0].isEstadoPelicula()) {
                listaPelicula.agregarACola(p[0].getIdPelicula());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Ya hemos alquilado esta película :,c");
            }
            numPeliculasAlquiladas++;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usted no puede elegir otra película");
        }


    }//GEN-LAST:event_btnAgregarPActionPerformed

    private void btnAlquilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlquilarActionPerformed
       limpiarTabla2();
        Queue q = listaPelicula.getColaPeliculas();
        //Pelicula pp[] = q.toArray();
        String peliculasAlquiladas = "";
       for(Object s : q) { 
           Pelicula p = (Pelicula) s;
           System.out.println(p.getIdPelicula());
           peliculasAlquiladas += "\n"+p.getNombrePelicula()+"";
           listaPelicula.modificarEstado(p.getNombrePelicula());
           }
       JOptionPane.showMessageDialog(rootPane, "Se han alquilado estas películas: " + peliculasAlquiladas);
       listaPelicula.getColaPeliculas().clear();
       cmbAccionCliente.setSelectedIndex(-1);
       cmbAnio.setSelectedIndex(-1);
       cmbGeneroC.setSelectedIndex(-1);
  

    }//GEN-LAST:event_btnAlquilarActionPerformed

    private void cmbAdminAccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAdminAccionActionPerformed
        if (cmbAdminAccion.getSelectedIndex() == 0) {
            enableComponents(pnlInsert);
        } else if (cmbAdminAccion.getSelectedIndex() == 1) {
            disableComponents(pnlInsert);
            String nombrePelicula = JOptionPane.showInputDialog("Inserte el nombre de la película que desea borrar");
            
            Pelicula peliABorrar[] = listaPelicula.BuscarPelicula(nombrePelicula);
            if (peliABorrar.length == 0) {
            JOptionPane.showMessageDialog(rootPane, "Que?");
            }else if (peliABorrar.length == 1)  {
              listaPelicula.borrarUnNodo(peliABorrar[0]);
            }
           
        }
    }//GEN-LAST:event_cmbAdminAccionActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed
    public void llenarTablaClienteFromList(ListaPelicula lp) {
        Nodo q, p;
        q = p = lp.getInicio();
        while (p != null) {
            dtmModeloTablaDos.addRow(new Object[]{p.getDato().getIdPelicula(), p.getDato().getNombrePelicula(),
                p.getDato().getAñoPelicula(), p.getDato().getCalificacionPelicula(), p.getDato().getGeneroPelicula(), p.getDato().getEstadoPeliculaNoBoleano()});
            T2hasRows = true;
            p = p.getEnlace();
        }
    }
    public void llenarTablaClienteFromArreglo(Pelicula[] p) {
        for (int l = 0; l < p.length; l++) {
            dtmModeloTablaDos.addRow(new Object[]{p[l].getIdPelicula(), p[l].getNombrePelicula(), p[l].getAñoPelicula(),
                p[l].getCalificacionPelicula(), p[l].getGeneroPelicula(), p[l].getEstadoPeliculaNoBoleano()});
            T2hasRows = true;
        }
    }
    public void limpiarTabla2() {
        if (T2hasRows) {
            for (int l = 0; l < dtmModeloTablaDos.getRowCount(); l++) {
                dtmModeloTablaDos.removeRow(l);
                l -= 1;
            }
            T2hasRows = false;
        }
    }
    private void cmbAccionClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAccionClienteActionPerformed
        int opcionElegida = cmbAccionCliente.getSelectedIndex();
        limpiarTabla2();
        //Buscar película, Mejores películas, Filtrar por género, Filtrar por año, Ordenar alfabéticamente
        switch (opcionElegida) {
            case 0:
                limpiarTabla2();
                int peliculaBuscada = Integer.parseInt(JOptionPane.showInputDialog(rootPane, "Ingrese el id de la pelicula"));
                Pelicula lp[]= new Pelicula[1];
                
                lp[0] = listaPelicula.binarySearch(peliculaBuscada);
                llenarTablaClienteFromArreglo(lp);
                cmbGeneroC.setEnabled(false);
                cmbAnio.setEnabled(false);
                cmbAccionCliente.setSelectedIndex(-1);
                break;

            case 1:
                limpiarTabla2();
                Pelicula[] p10m = listaPelicula.Pelicula10Mejores();
                llenarTablaClienteFromArreglo(p10m);
                cmbGeneroC.setEnabled(false);
                cmbAnio.setEnabled(false);
                cmbAccionCliente.setSelectedIndex(-1);
                break;
            case 2:
                limpiarTabla2();
                cmbGeneroC.setEnabled(true);
                cmbAnio.setEnabled(false);
                cmbAccionCliente.setSelectedIndex(-1);
                break;
            case 3:
                limpiarTabla2();
                cmbGeneroC.setEnabled(false);
                cmbAnio.setEnabled(true);
                cmbAccionCliente.setSelectedIndex(-1);
                break;
            case 4:
                limpiarTabla2();
                llenarTablaClienteFromList(listaPelicula);
                cmbGeneroC.setEnabled(false);
                cmbAnio.setEnabled(false);
                cmbAccionCliente.setSelectedIndex(-1);
                break;
            default:
                System.out.println("NPI");
        }

        //"Acción","Terror","Anime","Comedia",

    }//GEN-LAST:event_cmbAccionClienteActionPerformed

    private void cmbGeneroCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGeneroCActionPerformed
        try{
        limpiarTabla2();
        String peliculaFiltradaGenero = cmbGeneroC.getSelectedItem().toString();
        Pelicula lpg[] = listaPelicula.ListarGenero(peliculaFiltradaGenero);
        if (lpg.length == 0) {
            JOptionPane.showMessageDialog(rootPane, "No se ha encontrado nada :c");
        } else {
            llenarTablaClienteFromArreglo(lpg);
        }}
        catch(Exception e){
            System.out.println("Something with the index is wrong, but nevermind");
        }
    }//GEN-LAST:event_cmbGeneroCActionPerformed
    private void cmbAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAnioActionPerformed
        limpiarTabla2();
        int peliculaFiltradaAnio = Integer.parseInt(cmbAnio.getSelectedItem().toString());
        Pelicula pfa[] = listaPelicula.ListarAñoCreacion(peliculaFiltradaAnio);
        if (pfa.length == 0) {
            JOptionPane.showMessageDialog(rootPane, "No se ha encontrado nada :c");
        } else {
            llenarTablaClienteFromArreglo(pfa);
        }
    }//GEN-LAST:event_cmbAnioActionPerformed
    private void btnBorrarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarPActionPerformed
        listaPelicula.getColaPeliculas().clear();
        JOptionPane.showMessageDialog(rootPane, "Se ha vacíado las películas que agregó");
        numPeliculasAlquiladas = 0 ;
    }//GEN-LAST:event_btnBorrarPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIProyectoFinal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIProyectoFinal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIProyectoFinal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIProyectoFinal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIProyectoFinal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgTipo;
    private javax.swing.JButton btnAgregarP;
    private javax.swing.JButton btnAlquilar;
    private javax.swing.JButton btnBorrarP;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnIngresarPeli;
    private javax.swing.JComboBox<String> cmbAccionCliente;
    private javax.swing.JComboBox<String> cmbAdminAccion;
    private javax.swing.JComboBox<String> cmbAnio;
    private javax.swing.JComboBox<String> cmbGenero;
    private javax.swing.JComboBox<String> cmbGeneroC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblCosto;
    private javax.swing.JLabel lblGenero;
    private javax.swing.JLabel lblUnidad;
    private javax.swing.JPanel pnlAdmin;
    private javax.swing.JPanel pnlCliente;
    private javax.swing.JPanel pnlInsert;
    private javax.swing.JRadioButton rbtCliente;
    private javax.swing.JRadioButton rbtPersonal;
    private javax.swing.JTable tblInventario;
    private javax.swing.JTable tblInventarioCliente;
    private javax.swing.JTextField txtAnio;
    private javax.swing.JTextField txtCalificacion;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
