package proyectofinal;

import java.awt.Component;
import java.awt.Container;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @authors The Noobgrammers
 */
public class GUIProyectoFinal extends javax.swing.JFrame {
//Hay un mogollón de variables :,u .

    int sumaTotalV = 0;
    int vendAleatorioV;
    int numeroEjecucionesA = 0;
    int[] coincidenciasA = {99, 99, 99, 99, 99};
    int[] preciosV = {99, 99, 99, 99, 99};
    //int elementosComprados = 0;
    String elementsV = "";
    String prizes = "";
    double precioProductoV = 0;
    boolean isMatched;
    boolean hasRows;

    //Arreglo de los empleados del almacén
    Vendedor[] vendedoresV;

    //Declaramos los arreglos para gestión de inventario.*/
    ArrayList<Mercaderia> productosV;
    ArrayList<String> nombreProductosAV;
    ArrayList<String> tipoProductosA;
    ArrayList<Mercaderia> carritoV;
    ArrayList<Integer> cantidadesCarritoV;

    //Declarar el modelo de cada tabla
    DefaultTableModel dtmModeloTablaUno;
    Cliente client;

    //Esta funcion deshabilita los componentes de un panel
    public static void disableComponents(Container panelName) {
        for (Component component : panelName.getComponents()) {
            component.setEnabled(false);
        }
    }
    // Esta hace lo contrario

    public static void enableComponents(Container panelName) {
        for (Component component : panelName.getComponents()) {
            component.setEnabled(true);
        }
    }

    /**
     * Creates new form GUIProyectoFinal
     */
    public GUIProyectoFinal() {
        initComponents();

        txaPrecios.setEditable(false);

        disableComponents(pnlAdmin);
        disableComponents(pnlCliente);
        disableComponents(pnlMer);

        carritoV = new ArrayList<>();
        productosV = new ArrayList<>();
        nombreProductosAV = new ArrayList<>();
        tipoProductosA = new ArrayList<>();
        cantidadesCarritoV = new ArrayList<>();

        dtmModeloTablaUno = new DefaultTableModel();
        dtmModeloTablaUno.addColumn("Nombre");
        dtmModeloTablaUno.addColumn("Tipo");
        dtmModeloTablaUno.addColumn("Codigo");
        dtmModeloTablaUno.addColumn("Cantidad");
        dtmModeloTablaUno.addColumn("Precio");
        tblInventario.setModel(dtmModeloTablaUno);

        vendedoresV = new Vendedor[3];
        vendedoresV[0] = new Vendedor(178459278, "EMP-001", "Almendro", "Pedrerlol");
        vendedoresV[1] = new Vendedor(172346863, "EMP-002", "Juana", "Caicho");
        vendedoresV[2] = new Vendedor(147845198, "EMP-003", "Magerly", "Chavez");

    }

    //Para limipiar paneles
    public void adminCleaner() {

        txtNombreProducto.setText("");
        txtCodigo.setText("");
        txtCosto.setText("");
        txtUnidad.setText("");
        cmbProducto.setSelectedItem(null);

    }

    public void clientCleaner() {
        txtNombre.setText("");
        txtApellido.setText("");
        txtRUC.setText("");
        cmbProductoCompra.setSelectedItem(null);
        txtCantidaCompra.setText("");
        txaPrecios.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgTipo = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rbtCliente = new javax.swing.JRadioButton();
        rbtPersonal = new javax.swing.JRadioButton();
        pnlAdmin = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pnlMer = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cmbProducto = new javax.swing.JComboBox<>();
        lblProducto = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lblCosto = new javax.swing.JLabel();
        txtCosto = new javax.swing.JTextField();
        lblUnidad = new javax.swing.JLabel();
        txtUnidad = new javax.swing.JTextField();
        btnGuardarCambios = new javax.swing.JButton();
        txtNombreProducto = new javax.swing.JTextField();
        lblNombreP = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInventario = new javax.swing.JTable();
        btnConsultar = new javax.swing.JButton();
        pnlCliente = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblApellido = new javax.swing.JLabel();
        lblRUC = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtRUC = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cmbProductoCompra = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtCantidaCompra = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnGenerar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaPrecios = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel2.setText("Bienvenido");

        jLabel3.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel3.setText("Seleccione el tipo de usuario: ");

        btgTipo.add(rbtCliente);
        rbtCliente.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        rbtCliente.setText("Cliente");
        rbtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtClienteActionPerformed(evt);
            }
        });

        btgTipo.add(rbtPersonal);
        rbtPersonal.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        rbtPersonal.setText("Personal Administrativo");
        rbtPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtPersonalActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel1.setText("Inventario");

        jLabel5.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel5.setText("Agregar nueva mercancía");

        cmbProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Libro", "Computador", "Celular" }));
        cmbProducto.setSelectedIndex(-1);
        cmbProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProductoActionPerformed(evt);
            }
        });

        lblProducto.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        lblProducto.setText("Tipo Producto");

        lblCodigo.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        lblCodigo.setText("Código");

        lblCosto.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        lblCosto.setText("Costo");

        lblUnidad.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        lblUnidad.setText("Unidades");

        txtUnidad.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                txtUnidadComponentHidden(evt);
            }
        });
        txtUnidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUnidadActionPerformed(evt);
            }
        });

        btnGuardarCambios.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        btnGuardarCambios.setText("Guardar Cambios");
        btnGuardarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCambiosActionPerformed(evt);
            }
        });

        lblNombreP.setText("Nombre:");

        javax.swing.GroupLayout pnlMerLayout = new javax.swing.GroupLayout(pnlMer);
        pnlMer.setLayout(pnlMerLayout);
        pnlMerLayout.setHorizontalGroup(
            pnlMerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMerLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(pnlMerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(pnlMerLayout.createSequentialGroup()
                        .addGroup(pnlMerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblProducto)
                            .addGroup(pnlMerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblNombreP)
                                .addComponent(lblCodigo)))
                        .addGroup(pnlMerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMerLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlMerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbProducto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtCodigo)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMerLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27)
                        .addGroup(pnlMerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCosto)
                            .addComponent(lblUnidad))))
                .addGap(26, 26, 26)
                .addGroup(pnlMerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardarCambios)
                .addContainerGap())
        );
        pnlMerLayout.setVerticalGroup(
            pnlMerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProducto)
                    .addComponent(lblCosto)
                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlMerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigo)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUnidad)
                    .addComponent(txtUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlMerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarCambios)
                    .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombreP))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        tblInventario.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        tblInventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblInventario.setEnabled(false);
        jScrollPane1.setViewportView(tblInventario);

        btnConsultar.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        btnConsultar.setText("Consultar Inventario");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAdminLayout = new javax.swing.GroupLayout(pnlAdmin);
        pnlAdmin.setLayout(pnlAdminLayout);
        pnlAdminLayout.setHorizontalGroup(
            pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAdminLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAdminLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(103, 103, 103))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAdminLayout.createSequentialGroup()
                                .addComponent(pnlMer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(249, 249, 249))))
                    .addGroup(pnlAdminLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(pnlAdminLayout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(btnConsultar)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlAdminLayout.setVerticalGroup(
            pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlMer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnConsultar)
                .addGap(11, 11, 11))
        );

        jLabel4.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel4.setText("Facturación");

        lblNombre.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        lblNombre.setText("Nombre:");

        lblApellido.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        lblApellido.setText("Apellido:");

        lblRUC.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        lblRUC.setText("RUC:");

        jLabel13.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel13.setText("Comprar");

        cmbProductoCompra.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        cmbProductoCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProductoCompraActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel14.setText("Producto:");

        jLabel15.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel15.setText("Cantidad");

        jLabel16.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel16.setText("Precio (c/u)");

        btnAgregar.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnGenerar.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        btnGenerar.setText("Generar factura");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        txaPrecios.setColumns(20);
        txaPrecios.setRows(5);
        jScrollPane2.setViewportView(txaPrecios);

        javax.swing.GroupLayout pnlClienteLayout = new javax.swing.GroupLayout(pnlCliente);
        pnlCliente.setLayout(pnlClienteLayout);
        pnlClienteLayout.setHorizontalGroup(
            pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblRUC)
                    .addComponent(jLabel14))
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cmbProductoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15)
                        .addContainerGap(194, Short.MAX_VALUE))
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(txtRUC, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlClienteLayout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(btnAgregar))
                            .addGroup(pnlClienteLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(btnGenerar))
                            .addGroup(pnlClienteLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtCantidaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jLabel13)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addComponent(lblNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblApellido)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlClienteLayout.setVerticalGroup(
            pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(lblApellido)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRUC)
                    .addComponent(txtRUC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addGap(12, 12, 12)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbProductoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(txtCantidaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addContainerGap(42, Short.MAX_VALUE))
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGenerar)
                        .addGap(58, 58, 58))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(41, 41, 41)
                .addComponent(rbtPersonal)
                .addGap(121, 121, 121)
                .addComponent(rbtCliente)
                .addGap(197, 197, 197))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(rbtCliente)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rbtPersonal)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(338, 338, 338))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUnidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUnidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUnidadActionPerformed

    private void txtUnidadComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_txtUnidadComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUnidadComponentHidden

    private void rbtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtClienteActionPerformed

        //Cuando se presiona en cliente, se deshabilita los otros paneles.
        disableComponents(pnlAdmin);
        disableComponents(pnlMer);
        enableComponents(pnlCliente);

        
        //Para borrar los datos de tabla, los cuales pueden quedar visibles.
        if (hasRows) {
            for (int l = 0; l < dtmModeloTablaUno.getRowCount(); l++) {
                dtmModeloTablaUno.removeRow(l);
                l -= 1;
            }
            hasRows = false;
        }

        //Para añadir los datos
        if (nombreProductosAV.size() > 0) {
            cmbProductoCompra.removeAllItems();
            for (int insert = 0; insert < nombreProductosAV.size(); insert++) {
                prizes += productosV.get(insert).getNombre() + "| $" + productosV.get(insert).getPrecio() + " |Hay " + productosV.get(insert).getCantidad() + "\n";
                cmbProductoCompra.addItem(nombreProductosAV.get(insert));
            }
        }

        
        cmbProductoCompra.setSelectedIndex(-1);
        //Para mostrar en el campo de texto la lista de precios de los productos insertados.
        txaPrecios.setText(prizes);
        btgTipo.clearSelection();


    }//GEN-LAST:event_rbtClienteActionPerformed

    private void rbtPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtPersonalActionPerformed
        //Desplegar la ventana de autenticación.
        JPanel panel = new JPanel();
        JLabel label = new JLabel("Ingrese la contraseña:");
        JPasswordField pass = new JPasswordField(4);
        panel.add(label);
        panel.add(pass);
        String[] options = new String[]{"OK", "Cancelar"};

        JOptionPane.showOptionDialog(null, panel, "Personal Administrativo",
                JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                null, options, options[1]);
        //Verificando la entrada.
        if (!String.valueOf(pass.getPassword()).equals("1234")) {
            JOptionPane.showMessageDialog(rootPane, "Mala contraseña");

        } else {
            System.out.println("QUE PASA!");
            enableComponents(pnlAdmin);
            enableComponents(pnlMer);
            disableComponents(pnlCliente);
            clientCleaner();
        }
        btgTipo.clearSelection();
    }//GEN-LAST:event_rbtPersonalActionPerformed

    private void btnGuardarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCambiosActionPerformed
        //Detectar la insercion de codigo en blanco.... de hecho este bloque esta de más.
        boolean codigoValido;
        switch (txtCodigo.getText()) {
            case "LIB-":
            case "COM-":
            case "TLF-":
                codigoValido = false;
                break;
            default:
                codigoValido = true;
        }
        Control controlador = new Control();
        //Iniciar el bloque try para atrapar excepciones con las entradas de usuarios.
        try {
            //Para evitar espacios en blanco, o codigos con mas de 7 caracteres.

            if (cmbProducto.getSelectedItem().equals("") || txtCodigo.getText().equals("") || txtCodigo.getText().length() != 7
                    || txtCosto.getText().equals("") || txtUnidad.getText().equals("") || !codigoValido
                    || txtNombreProducto.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Error 100 (Consulte el manual)");
            } else {
                //System.out.println(cmbProducto.getSelectedItem().toString());

                isMatched = false;
                int k = 0;

                //System.out.println(nombreProductos.size());
                //System.out.println(tipoProductos.size());
                //Iniciamos una busqueda en el arreglo, buscando coincidencias en los nombres y tipos de algun producto
                if (numeroEjecucionesA > 0) {
                    if (nombreProductosAV.contains(txtNombreProducto.getText())) {
                        //System.out.println("\n Checking types of productos\n\n");
                        for (int j = 0; j < nombreProductosAV.size(); j++) {
                            if (nombreProductosAV.get(j).equals(txtNombreProducto.getText()) && tipoProductosA.get(j).equals(cmbProducto.getSelectedItem().toString())) {
                                //System.out.println("PAREÇE HABER MATCH CON: " + nombreProductos.get(j));
                                //System.out.println("De tipos... " + tipoProductos.get(j));
                                coincidenciasA[k] = j;
                                k++;
                            }
                            //System.out.println("---------------------------------------------------------------------");
                        }
                    }
                    //System.out.println("\t\t::::Verificando coincidencias::::\n");

                    //Las coincidencias encontradas en el bloque anterior se usan para generar modificaciones, sumar las cantidades.
                    //considerando que aquella entrada corresponde a una adicion al inventario.
                    for (int con = 0; con < 5; con++) {
                        if (coincidenciasA[con] != 99) {
                            isMatched = true;
                            nombreProductosAV.set(coincidenciasA[con], txtNombreProducto.getText());

                            tipoProductosA.set(coincidenciasA[con], cmbProducto.getSelectedItem().toString());

                            //System.out.println("\t\t::::Se ha encontrado match::::" + productos.get(coincidencias[con]).toString() + "\n");
                            productosV.set(coincidenciasA[con], new Mercaderia(txtNombreProducto.getText(), Integer.parseInt(txtCodigo.getText().substring(4)),
                                    productosV.get(coincidenciasA[con]).getCantidad() + Integer.parseInt(txtUnidad.getText()), controlador.precioPorUnidad(Double.parseDouble(txtCosto.getText()))));
                            coincidenciasA[con] = 99;
                        }
                    }

                    //Por si no se encuentran coindicencias
                    if (!isMatched) {
                        productosV.add(new Mercaderia(txtNombreProducto.getText(), Integer.parseInt(txtCodigo.getText().substring(4)),
                                Integer.parseInt(txtUnidad.getText()), Double.parseDouble(txtCosto.getText())));
                        nombreProductosAV.add(txtNombreProducto.getText());
                        tipoProductosA.add(cmbProducto.getSelectedItem().toString());
                    }
                    /*System.out.println("Imprimiendo la lista de productos");
                    productos.forEach(me -> {
                        System.out.println(me);
                    });

                    System.out.println("Imprimiendo los nombres de productos");
                    nombreProductos.forEach(np -> {
                        System.out.println(np);
                    });*/

                } else { //Cuando es la primera ejecucion...
                    nombreProductosAV.add(txtNombreProducto.getText());
                    tipoProductosA.add(cmbProducto.getSelectedItem().toString());
                    productosV.add(new Mercaderia(txtNombreProducto.getText(), Integer.parseInt(txtCodigo.getText().substring(4)),
                            Integer.parseInt(txtUnidad.getText()), Double.parseDouble(txtCosto.getText())));
                }/*
                for (int it = 0; it < 5; it++) {
                    System.out.println(coincidencias[it]);
                }*/

                //Para limpiar los campos
                adminCleaner();
                numeroEjecucionesA++;

            }
               
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error 701 (Consulte el manual)");
        }


    }//GEN-LAST:event_btnGuardarCambiosActionPerformed

    private void cmbProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProductoActionPerformed
        /*Este bloque "pre-llena" el campo del codigo, basado en el tipo de producto que se elige.
       Genera algunas excepciones, por el orden de ejecucion, como guardar va primero, y ese bloque limpia
       El combo tipo producto, entonces genera una excepcion, la cual se atrapa con try & catch*/
        try {
            switch (cmbProducto.getSelectedItem().toString()) {
                case "Libro":
                    txtCodigo.setText("LIB-");
                    break;
                case "Computador":
                    txtCodigo.setText("COM-");
                    break;
                case "Celular":
                    txtCodigo.setText("TLF-");
                    break;
            }
        } catch (Exception e) {
            System.out.println("I cover it!");
            System.out.println("---------------------------------------------------");
        }
    }//GEN-LAST:event_cmbProductoActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        //Para limpiar la tabla cada ves que, estando en AdminPanel y se consulta la tabla.
        if (hasRows) {
            for (int l = 0; l < dtmModeloTablaUno.getRowCount(); l++) {
                dtmModeloTablaUno.removeRow(l);
                l -= 1;
            }
            hasRows = false;
        }

        //Para añadir al comboBox los productos añadidos
        for (int l = 0; l < productosV.size(); l++) {
            dtmModeloTablaUno.addRow(new Object[]{productosV.get(l).getNombre(), tipoProductosA.get(l), productosV.get(l).getCodigo(),
                productosV.get(l).getCantidad(), productosV.get(l).getPrecio()});
            hasRows = true;
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        try {
            if (txtNombre.getText().equals("") || txtApellido.getText().equals("") || txtRUC.getText().equals("")
                    || cmbProductoCompra.getSelectedIndex() == -1 || txtCantidaCompra.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Error 100 (Consulte el manual)");
            } else {
                //Iniciamos la agregación de productos a la factura.
                int x = 0;
                double comprobarCantidad = 0;
                //System.out.println(cmbProductoCompra.getSelectedItem().toString().substring(0, 2));
                System.out.println("Ingresando a IF");
                //Empezamos la busqueda de coincidencias en los productos que se han ingresado en Admin panel
                if (nombreProductosAV.contains(cmbProductoCompra.getSelectedItem().toString())) {
                    //System.out.println("\n Checking types of productos\n\n");
                    System.out.println("Ingresando a FOR");
                    for (int j = 0; j < nombreProductosAV.size(); j++) {
                        System.out.println("Ingresando al IF del FOR");
                        if (nombreProductosAV.get(j).equals(cmbProductoCompra.getSelectedItem().toString())) {
                            //System.out.println("ENCONTRADO!!: " + nombreProductos.get(j));
                            //System.out.println("De tipos... " + tipoProductos.get(j));
                            preciosV[x] = j;
                            x++;
                        }
                        //System.out.println("---------------------------------------------------------------------");
                    }
                }

                System.out.println("\t\t::::INGRESANDO AL SEGUNDO FOR::::\n");
                for (int con = 0; con < 5; con++) {
                    if (preciosV[con] != 99) {

                        comprobarCantidad = productosV.get(preciosV[con]).getCantidad() - Integer.parseInt(txtCantidaCompra.getText());
                        System.out.println("ComprObando Cantidash ::: ");
                        System.out.println(comprobarCantidad);

                        //Para evitar que se compren mas productos de los que se tienen en inventario
                        if (comprobarCantidad < 0) {
                            JOptionPane.showMessageDialog(rootPane, "...No existe tal cantidad de productos :,u....");
                            con = 1000;
                        } else {
                            System.out.println("Hemos ingresado al else del if???");
                            productosV.set(preciosV[con], new Mercaderia(productosV.get(preciosV[con]).getNombre(), productosV.get(preciosV[con]).getCodigo(),
                                    productosV.get(preciosV[con]).getCantidad() - Integer.parseInt(txtCantidaCompra.getText()), productosV.get(preciosV[con]).getPrecio()));
                            System.out.println("Se ha agregado el nuevo elementoshhh");
                            carritoV.add(productosV.get(preciosV[con]));
                            System.out.println(" aqui creeria la falla");
                            sumaTotalV += productosV.get(preciosV[con]).getPrecio() * (Integer.parseInt(txtCantidaCompra.getText()));
                            System.out.println("No se ladbd");
                            //elementosComprados++;
                            System.out.println("Hemos salido con vida????????" + precioProductoV);

                            preciosV[con] = 99;
                        }
                    }
                }

                //txtPrecioCompra.setText(String.valueOf(controlador.precioPorProducto(Integer.parseInt(txtCantidaCompra.getText()), precioProducto)));
                //Creando un nuevo cliente con los datos ingresados en la GUI
                client = new Cliente(Integer.parseInt(txtRUC.getText()), txtNombre.getText(), txtApellido.getText());
                //Elegir el vendedor de manera aleatoria.
                vendAleatorioV = (int) (Math.random() * 3) + 1;
                //System.out.println("SE han CompraDO : " + elementosComprados);
                //System.out.println("La longitush del carrito is: " + carrito.size());
            }
            //Añadir el valor de la cantidad elegida al ArrayList
            cantidadesCarritoV.add(Integer.parseInt(txtCantidaCompra.getText()));
            txtCantidaCompra.setText("");
            cmbProductoCompra.setSelectedIndex(-1);
             prizes = "";
             for (int insert = 0; insert < nombreProductosAV.size(); insert++) {
                prizes += productosV.get(insert).getNombre() + "| $" + productosV.get(insert).getPrecio() + " |Hay " + productosV.get(insert).getCantidad() + "\n";
                
            }
               
        cmbProductoCompra.setSelectedIndex(-1);
        //Para mostrar en el campo de texto la lista de precios de los productos insertados.
        txaPrecios.setText(prizes);
        } catch (java.lang.IndexOutOfBoundsException index) {
            System.out.println("Error 701 (Consulte el manual)");
        } catch (Exception e) {
            //System.out.println("Algo salio mal?");
            JOptionPane.showMessageDialog(rootPane, "Error 701 (Consulte el manual)");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        //De los productos seleccionados, generamos un String para la factura.
        if (carritoV.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Error 404 (Consulte el manual) :,u");
        } else {
            for (int y = 0; y < carritoV.size(); y++) {

                elementsV += carritoV.get(y).getNombre() + "|    |   |   |   " + cantidadesCarritoV.get(y) + "|    |    |    |     |"
                        + carritoV.get(y).getPrecio() + " \n";

            }
            // Deprecated
            Calendar fecha = Calendar.getInstance();
            int annio = fecha.get(Calendar.YEAR);
            int mes = fecha.get(Calendar.MONTH);
            int dia = fecha.get(Calendar.DAY_OF_MONTH);
            int nroFactura = 132145;
            String line = "------------------------------------------------------------------------------";
            //La factura se muestra en una ventana.
            JOptionPane.showMessageDialog(null, "                    GRACIAS POR SU COMPRA. \n " + line + "\n Nro Factura: " + nroFactura
                    + "\n" + "Fecha: " + dia + "/" + mes + "/" + annio
                    + "\n" + "Cliente: " + client.getNombre() + " " + client.getApellido()
                    + "\n" + "RUC: " + client.getRUCc()
                    + "\n" + "Atendido por: " + vendedoresV[vendAleatorioV - 1].getNombre() + " " + vendedoresV[vendAleatorioV - 1].getApellido()
                    + "\n" + line
                    + "\n" + "PRODUCTO|   |    |    | CANTIDAD |    |    |    |   | PRECIO (u)  \n"
                    + "\n" + "" + elementsV
                    + "\n" + "Valor subtotal (sin IVA): $" + sumaTotalV * 0.88
                    + "\n" + " Valor total: $" + (sumaTotalV)
            );
            //Reseteamos todos los arraylists after generating bill
            cantidadesCarritoV.removeAll(cantidadesCarritoV);
            carritoV.removeAll(carritoV);
            elementsV = "";
            sumaTotalV = 0;
            nroFactura++;
            clientCleaner();
            JOptionPane.showMessageDialog(rootPane, "Listo para una nueva compra C:");
             prizes = "";
             for (int insert = 0; insert < nombreProductosAV.size(); insert++) {
                prizes += productosV.get(insert).getNombre() + "| $" + productosV.get(insert).getPrecio() + " |hay: " + productosV.get(insert).getCantidad() + "\n";
                
            }
        

        
        cmbProductoCompra.setSelectedIndex(-1);
        //Para mostrar en el campo de texto la lista de precios de los productos insertados.
        txaPrecios.setText(prizes);
        }
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void cmbProductoCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProductoCompraActionPerformed


    }//GEN-LAST:event_cmbProductoCompraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIProyectoFinal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIProyectoFinal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIProyectoFinal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIProyectoFinal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIProyectoFinal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgTipo;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnGuardarCambios;
    private javax.swing.JComboBox<String> cmbProducto;
    private javax.swing.JComboBox<String> cmbProductoCompra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblCosto;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombreP;
    private javax.swing.JLabel lblProducto;
    private javax.swing.JLabel lblRUC;
    private javax.swing.JLabel lblUnidad;
    private javax.swing.JPanel pnlAdmin;
    private javax.swing.JPanel pnlCliente;
    private javax.swing.JPanel pnlMer;
    private javax.swing.JRadioButton rbtCliente;
    private javax.swing.JRadioButton rbtPersonal;
    private javax.swing.JTable tblInventario;
    private javax.swing.JTextArea txaPrecios;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCantidaCompra;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtRUC;
    private javax.swing.JTextField txtUnidad;
    // End of variables declaration//GEN-END:variables
}
